{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletSDK = void 0;\n\nvar ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\n\nvar CoinbaseWalletProvider_1 = require(\"./provider/CoinbaseWalletProvider\");\n\nvar WalletSDKUI_1 = require(\"./provider/WalletSDKUI\");\n\nvar WalletSDKRelay_1 = require(\"./relay/WalletSDKRelay\");\n\nvar WalletSDKRelayEventManager_1 = require(\"./relay/WalletSDKRelayEventManager\");\n\nvar util_1 = require(\"./util\");\n\nvar LINK_API_URL = process.env.LINK_API_URL || \"https://www.walletlink.org\";\nvar SDK_VERSION = process.env.SDK_VERSION || require(\"../package.json\").version || \"unknown\";\n\nvar CoinbaseWalletSDK = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param options Coinbase Wallet SDK constructor options\n   */\n  function CoinbaseWalletSDK(options) {\n    _classCallCheck(this, CoinbaseWalletSDK);\n\n    var _a;\n\n    this._appName = \"\";\n    this._appLogoUrl = null;\n    this._relay = null;\n    this._relayEventManager = null;\n    var linkAPIUrl = options.linkAPIUrl || LINK_API_URL;\n    var uiConstructor;\n\n    if (!options.uiConstructor) {\n      uiConstructor = function uiConstructor(opts) {\n        return new WalletSDKUI_1.WalletSDKUI(opts);\n      };\n    } else {\n      uiConstructor = options.uiConstructor;\n    }\n\n    if (typeof options.overrideIsMetaMask === \"undefined\") {\n      this._overrideIsMetaMask = false;\n    } else {\n      this._overrideIsMetaMask = options.overrideIsMetaMask;\n    }\n\n    this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    this._eventListener = options.eventListener;\n    var u = new URL(linkAPIUrl);\n    var origin = \"\".concat(u.protocol, \"//\").concat(u.host);\n    this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(\"-walletlink:\".concat(origin)); // needs migration to preserve local states\n\n    this._storage.setItem(\"version\", CoinbaseWalletSDK.VERSION);\n\n    if (this.walletExtension) {\n      return;\n    }\n\n    this._relayEventManager = new WalletSDKRelayEventManager_1.WalletSDKRelayEventManager();\n    this._relay = new WalletSDKRelay_1.WalletSDKRelay({\n      linkAPIUrl: linkAPIUrl,\n      version: SDK_VERSION,\n      darkMode: !!options.darkMode,\n      uiConstructor: uiConstructor,\n      storage: this._storage,\n      relayEventManager: this._relayEventManager,\n      eventListener: this._eventListener\n    });\n    this.setAppInfo(options.appName, options.appLogoUrl);\n\n    this._relay.attachUI();\n  }\n  /**\n   * Create a Web3 Provider object\n   * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n   * @param chainId Ethereum Chain ID (Default: 1)\n   * @returns A Web3 Provider\n   */\n\n\n  _createClass(CoinbaseWalletSDK, [{\n    key: \"makeWeb3Provider\",\n    value: function makeWeb3Provider() {\n      var jsonRpcUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var chainId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var extension = this.walletExtension;\n\n      if (extension) {\n        if (!this.isCipherProvider(extension)) {\n          extension.setProviderInfo(jsonRpcUrl, chainId);\n        }\n\n        return extension;\n      }\n\n      var relay = this._relay;\n\n      if (!relay || !this._relayEventManager || !this._storage) {\n        throw new Error(\"Relay not initialized, should never happen\");\n      }\n\n      if (!jsonRpcUrl) relay.setConnectDisabled(true);\n      return new CoinbaseWalletProvider_1.CoinbaseWalletProvider({\n        relayProvider: function relayProvider() {\n          return Promise.resolve(relay);\n        },\n        relayEventManager: this._relayEventManager,\n        storage: this._storage,\n        jsonRpcUrl: jsonRpcUrl,\n        chainId: chainId,\n        eventListener: this._eventListener,\n        overrideIsMetaMask: this._overrideIsMetaMask,\n        overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet\n      });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      var _a;\n\n      this._appName = appName || \"DApp\";\n      this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n      var extension = this.walletExtension;\n\n      if (extension) {\n        if (!this.isCipherProvider(extension)) {\n          extension.setAppInfo(this._appName, this._appLogoUrl);\n        }\n      } else {\n        (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n      }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var _a;\n\n      var extension = this.walletExtension;\n\n      if (extension) {\n        extension.close();\n      } else {\n        (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n      }\n    }\n  }, {\n    key: \"walletExtension\",\n    get: function get() {\n      var _a;\n\n      return (_a = window.coinbaseWalletExtension) !== null && _a !== void 0 ? _a : window.walletLinkExtension;\n    }\n  }, {\n    key: \"isCipherProvider\",\n    value: function isCipherProvider(provider) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return typeof provider.isCipher === \"boolean\" && provider.isCipher;\n    }\n  }]);\n\n  return CoinbaseWalletSDK;\n}();\n\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;\nCoinbaseWalletSDK.VERSION = SDK_VERSION;","map":{"version":3,"names":["Object","defineProperty","exports","value","CoinbaseWalletSDK","ScopedLocalStorage_1","require","CoinbaseWalletProvider_1","WalletSDKUI_1","WalletSDKRelay_1","WalletSDKRelayEventManager_1","util_1","LINK_API_URL","process","env","SDK_VERSION","version","options","_a","_appName","_appLogoUrl","_relay","_relayEventManager","linkAPIUrl","uiConstructor","opts","WalletSDKUI","overrideIsMetaMask","_overrideIsMetaMask","_overrideIsCoinbaseWallet","overrideIsCoinbaseWallet","_eventListener","eventListener","u","URL","origin","protocol","host","_storage","ScopedLocalStorage","setItem","VERSION","walletExtension","WalletSDKRelayEventManager","WalletSDKRelay","darkMode","storage","relayEventManager","setAppInfo","appName","appLogoUrl","attachUI","jsonRpcUrl","chainId","extension","isCipherProvider","setProviderInfo","relay","Error","setConnectDisabled","CoinbaseWalletProvider","relayProvider","Promise","resolve","getFavicon","close","resetAndReload","window","coinbaseWalletExtension","walletLinkExtension","provider","isCipher"],"sources":["/opt/miami-hackathon-starknet-p2e-main/node_modules/@coinbase/wallet-sdk/dist/CoinbaseWalletSDK.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletSDK = void 0;\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst CoinbaseWalletProvider_1 = require(\"./provider/CoinbaseWalletProvider\");\nconst WalletSDKUI_1 = require(\"./provider/WalletSDKUI\");\nconst WalletSDKRelay_1 = require(\"./relay/WalletSDKRelay\");\nconst WalletSDKRelayEventManager_1 = require(\"./relay/WalletSDKRelayEventManager\");\nconst util_1 = require(\"./util\");\nconst LINK_API_URL = process.env.LINK_API_URL || \"https://www.walletlink.org\";\nconst SDK_VERSION = process.env.SDK_VERSION ||\n    require(\"../package.json\").version ||\n    \"unknown\";\nclass CoinbaseWalletSDK {\n    /**\n     * Constructor\n     * @param options Coinbase Wallet SDK constructor options\n     */\n    constructor(options) {\n        var _a;\n        this._appName = \"\";\n        this._appLogoUrl = null;\n        this._relay = null;\n        this._relayEventManager = null;\n        const linkAPIUrl = options.linkAPIUrl || LINK_API_URL;\n        let uiConstructor;\n        if (!options.uiConstructor) {\n            uiConstructor = opts => new WalletSDKUI_1.WalletSDKUI(opts);\n        }\n        else {\n            uiConstructor = options.uiConstructor;\n        }\n        if (typeof options.overrideIsMetaMask === \"undefined\") {\n            this._overrideIsMetaMask = false;\n        }\n        else {\n            this._overrideIsMetaMask = options.overrideIsMetaMask;\n        }\n        this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this._eventListener = options.eventListener;\n        const u = new URL(linkAPIUrl);\n        const origin = `${u.protocol}//${u.host}`;\n        this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${origin}`); // needs migration to preserve local states\n        this._storage.setItem(\"version\", CoinbaseWalletSDK.VERSION);\n        if (this.walletExtension) {\n            return;\n        }\n        this._relayEventManager = new WalletSDKRelayEventManager_1.WalletSDKRelayEventManager();\n        this._relay = new WalletSDKRelay_1.WalletSDKRelay({\n            linkAPIUrl,\n            version: SDK_VERSION,\n            darkMode: !!options.darkMode,\n            uiConstructor,\n            storage: this._storage,\n            relayEventManager: this._relayEventManager,\n            eventListener: this._eventListener\n        });\n        this.setAppInfo(options.appName, options.appLogoUrl);\n        this._relay.attachUI();\n    }\n    /**\n     * Create a Web3 Provider object\n     * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n     * @param chainId Ethereum Chain ID (Default: 1)\n     * @returns A Web3 Provider\n     */\n    makeWeb3Provider(jsonRpcUrl = \"\", chainId = 1) {\n        const extension = this.walletExtension;\n        if (extension) {\n            if (!this.isCipherProvider(extension)) {\n                extension.setProviderInfo(jsonRpcUrl, chainId);\n            }\n            return extension;\n        }\n        const relay = this._relay;\n        if (!relay || !this._relayEventManager || !this._storage) {\n            throw new Error(\"Relay not initialized, should never happen\");\n        }\n        if (!jsonRpcUrl)\n            relay.setConnectDisabled(true);\n        return new CoinbaseWalletProvider_1.CoinbaseWalletProvider({\n            relayProvider: () => Promise.resolve(relay),\n            relayEventManager: this._relayEventManager,\n            storage: this._storage,\n            jsonRpcUrl,\n            chainId,\n            eventListener: this._eventListener,\n            overrideIsMetaMask: this._overrideIsMetaMask,\n            overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet\n        });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n    setAppInfo(appName, appLogoUrl) {\n        var _a;\n        this._appName = appName || \"DApp\";\n        this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n        const extension = this.walletExtension;\n        if (extension) {\n            if (!this.isCipherProvider(extension)) {\n                extension.setAppInfo(this._appName, this._appLogoUrl);\n            }\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n        }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n    disconnect() {\n        var _a;\n        const extension = this.walletExtension;\n        if (extension) {\n            extension.close();\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n        }\n    }\n    get walletExtension() {\n        var _a;\n        return (_a = window.coinbaseWalletExtension) !== null && _a !== void 0 ? _a : window.walletLinkExtension;\n    }\n    isCipherProvider(provider) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return typeof provider.isCipher === \"boolean\" && provider.isCipher;\n    }\n}\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;\nCoinbaseWalletSDK.VERSION = SDK_VERSION;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}