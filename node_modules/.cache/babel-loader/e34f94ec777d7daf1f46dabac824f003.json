{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _toConsumableArray = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _regeneratorRuntime = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/opt/miami-hackathon-starknet-p2e-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletProvider = void 0;\n\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\n\nvar EventListener_1 = require(\"../connection/EventListener\");\n\nvar Session_1 = require(\"../relay/Session\");\n\nvar WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\n\nvar util_1 = require(\"../util\");\n\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\n\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\n\nvar JSONRPC_1 = require(\"./JSONRPC\");\n\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\n\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\"; // Indicates chain has been switched by switchEthereumChain or addEthereumChain request\n\nvar HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nvar HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\n\nvar CoinbaseWalletProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(CoinbaseWalletProvider, _safe_event_emitter_);\n\n  var _super = _createSuper(CoinbaseWalletProvider);\n\n  function CoinbaseWalletProvider(options) {\n    var _this;\n\n    _classCallCheck(this, CoinbaseWalletProvider);\n\n    var _a;\n\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this._send = _this.send.bind(_assertThisInitialized(_this));\n    _this._sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this._eventListener = options.eventListener;\n    _this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n\n    var chainId = _this.getChainId();\n\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16)); // indicate that we've connected, for EIP-1193 compliance\n\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n\n    var cachedAddresses = _this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n\n    if (_this._addresses.length > 0) {\n      void _this.initializeRelay();\n    }\n\n    window.addEventListener(\"message\", function (event) {\n      var _a;\n\n      if (event.data.type !== \"walletLinkMessage\") return; // compatibility with CBW extension\n\n      if (event.data.data.action === \"defaultChainChanged\") {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n      }\n    });\n    return _this;\n  }\n\n  _createClass(CoinbaseWalletProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"isChainOverridden\",\n    get: function get() {\n      return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    },\n    set: function set(value) {\n      this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      if (this.isChainOverridden) return;\n      this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n      var hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n      if (hasChainSwitched && fromRelay) return;\n\n      if (fromRelay) {\n        this.isChainOverridden = true;\n      }\n\n      this.jsonRpcUrl = jsonRpcUrl; // emit chainChanged event if necessary\n\n      var originalChainId = this.getChainId();\n\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, address, symbol, decimals, image) {\n        var relay, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context.sent;\n                _context.next = 5;\n                return relay.watchAsset(type, address, symbol, decimals, image).promise;\n\n              case 5:\n                result = _context.sent;\n                return _context.abrupt(\"return\", !!result.result);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function watchAsset(_x, _x2, _x3, _x4, _x5) {\n        return _watchAsset.apply(this, arguments);\n      }\n\n      return watchAsset;\n    }()\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, isWhitelistedNetworkOrStandalone, res;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 2:\n                _context2.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context2.sent;\n                isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n\n                if (!(!this._isAuthorized() && !isWhitelistedNetworkOrStandalone)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 9;\n                return relay.requestEthereumAccounts().promise;\n\n              case 9:\n                _context2.next = 11;\n                return relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n\n              case 11:\n                res = _context2.sent;\n\n                if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                  this.updateProviderInfo(rpcUrls[0], chainId, false);\n                }\n\n                return _context2.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addEthereumChain(_x6, _x7, _x8, _x9, _x10, _x11) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(chainId) {\n        var relay, res, switchResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context3.sent;\n                _context3.next = 7;\n                return relay.switchEthereumChain(chainId.toString(10)).promise;\n\n              case 7:\n                res = _context3.sent;\n\n                if (!res.errorCode) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: res.errorCode\n                });\n\n              case 10:\n                switchResponse = res.result;\n\n                if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                  this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n                }\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function switchEthereumChain(_x12) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      void this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _a;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                (_a = this._eventListener) === null || _a === void 0 ? void 0 : _a.onEvent(EventListener_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::enable\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n                });\n\n                if (!(this._addresses.length > 0)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _toConsumableArray(this._addresses));\n\n              case 3:\n                _context4.next = 5;\n                return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n\n              case 5:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      void this.initializeRelay().then(function (relay) {\n        return relay.resetAndReload();\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      } // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n\n\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      } // send(JSONRPCRequest[]): JSONRPCResponse[]\n\n\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      } // send(JSONRPCRequest): JSONRPCResponse\n\n\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(request, callback) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"callback is required\");\n      } // send(JSONRPCRequest[], callback): void\n\n\n      if (Array.isArray(request)) {\n        var arrayCb = callback;\n\n        this._sendMultipleRequestsAsync(request).then(function (responses) {\n          return arrayCb(null, responses);\n        }).catch(function (err) {\n          return arrayCb(err, null);\n        });\n\n        return;\n      } // send(JSONRPCRequest, callback): void\n\n\n      var cb = callback;\n\n      this._sendRequestAsync(request).then(function (response) {\n        return cb(null, response);\n      }).catch(function (err) {\n        return cb(err, null);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"Expected a single, non-array, object argument.\",\n                  data: args\n                });\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.method' must be a non-empty string.\",\n                  data: args\n                });\n\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.params' must be an object or array if provided.\",\n                  data: args\n                });\n\n              case 7:\n                newParams = params === undefined ? [] : params; // Coinbase Wallet Requests\n\n                id = this._relayEventManager.makeRequestId();\n                _context5.next = 11;\n                return this._sendRequestAsync({\n                  method: method,\n                  params: newParams,\n                  jsonrpc: \"2.0\",\n                  id: id\n                });\n\n              case 11:\n                result = _context5.sent;\n                return _context5.abrupt(\"return\", result.result);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function request(_x13) {\n        return _request2.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(match) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context6.sent;\n                _context6.next = 5;\n                return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n\n              case 5:\n                res = _context6.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context6.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function scanQRCode(_x14) {\n        return _scanQRCode.apply(this, arguments);\n      }\n\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(data, action) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context7.sent;\n                _context7.next = 5;\n                return relay.genericRequest(data, action).promise;\n\n              case 5:\n                res = _context7.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context7.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function genericRequest(_x15, _x16) {\n        return _genericRequest.apply(this, arguments);\n      }\n\n      return genericRequest;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n\n      if (response.result === undefined) {\n        throw new Error(\"Coinbase Wallet does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n\n      this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return res && resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function () {\n      var _handleAsynchronousMethods2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(request) {\n        var method, params, relay;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                method = request.method;\n                params = request.params || [];\n                _context8.t0 = method;\n                _context8.next = _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_requestAccounts ? 5 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_sign ? 6 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_ecRecover ? 7 : _context8.t0 === JSONRPC_1.JSONRPCMethod.personal_sign ? 8 : _context8.t0 === JSONRPC_1.JSONRPCMethod.personal_ecRecover ? 9 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTransaction ? 10 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction ? 11 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_sendTransaction ? 12 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1 ? 13 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2 ? 14 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3 ? 15 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4 ? 16 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData ? 16 : _context8.t0 === JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary ? 17 : _context8.t0 === JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain ? 18 : _context8.t0 === JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain ? 19 : _context8.t0 === JSONRPC_1.JSONRPCMethod.wallet_watchAsset ? 20 : 21;\n                break;\n\n              case 5:\n                return _context8.abrupt(\"return\", this._eth_requestAccounts());\n\n              case 6:\n                return _context8.abrupt(\"return\", this._eth_sign(params));\n\n              case 7:\n                return _context8.abrupt(\"return\", this._eth_ecRecover(params));\n\n              case 8:\n                return _context8.abrupt(\"return\", this._personal_sign(params));\n\n              case 9:\n                return _context8.abrupt(\"return\", this._personal_ecRecover(params));\n\n              case 10:\n                return _context8.abrupt(\"return\", this._eth_signTransaction(params));\n\n              case 11:\n                return _context8.abrupt(\"return\", this._eth_sendRawTransaction(params));\n\n              case 12:\n                return _context8.abrupt(\"return\", this._eth_sendTransaction(params));\n\n              case 13:\n                return _context8.abrupt(\"return\", this._eth_signTypedData_v1(params));\n\n              case 14:\n                return _context8.abrupt(\"return\", this._throwUnsupportedMethodError());\n\n              case 15:\n                return _context8.abrupt(\"return\", this._eth_signTypedData_v3(params));\n\n              case 16:\n                return _context8.abrupt(\"return\", this._eth_signTypedData_v4(params));\n\n              case 17:\n                return _context8.abrupt(\"return\", this._cbwallet_arbitrary(params));\n\n              case 18:\n                return _context8.abrupt(\"return\", this._wallet_addEthereumChain(params));\n\n              case 19:\n                return _context8.abrupt(\"return\", this._wallet_switchEthereumChain(params));\n\n              case 20:\n                return _context8.abrupt(\"return\", this._wallet_watchAsset(params));\n\n              case 21:\n                _context8.next = 23;\n                return this.initializeRelay();\n\n              case 23:\n                relay = _context8.sent;\n                return _context8.abrupt(\"return\", relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl));\n\n              case 25:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function _handleAsynchronousMethods(_x17) {\n        return _handleAsynchronousMethods2.apply(this, arguments);\n      }\n\n      return _handleAsynchronousMethods;\n    }()\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var address = (0, util_1.ensureAddressString)(addressString);\n\n        var lowercaseAddresses = this._addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n\n        return lowercaseAddresses.includes(address);\n      } catch (_a) {}\n\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      var _a;\n\n      if (!this._isKnownAddress(addressString)) {\n        (_a = this._eventListener) === null || _a === void 0 ? void 0 : _a.onEvent(EventListener_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n\n      this._ensureKnownAddress(fromAddress);\n\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_isAuthorized\",\n    value: function _isAuthorized() {\n      return this._addresses.length > 0;\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (!this._isAuthorized()) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this._ensureKnownAddress(address);\n\n                _context9.prev = 1;\n                _context9.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context9.sent;\n                _context9.next = 7;\n                return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n\n              case 7:\n                res = _context9.sent;\n                return _context9.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 11:\n                _context9.prev = 11;\n                _context9.t0 = _context9[\"catch\"](1);\n\n                if (!(typeof _context9.t0.message === \"string\" && _context9.t0.message.match(/(denied|rejected)/i))) {\n                  _context9.next = 15;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n\n              case 15:\n                throw _context9.t0;\n\n              case 16:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[1, 11]]);\n      }));\n\n      function _signEthereumMessage(_x18, _x19, _x20, _x21) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context10.sent;\n                _context10.next = 5;\n                return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n\n              case 5:\n                res = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 7:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function _ethereumAddressFromSignedMessage(_x22, _x23, _x24) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return _toConsumableArray(this._addresses);\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var _a, res, relay;\n\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                (_a = this._eventListener) === null || _a === void 0 ? void 0 : _a.onEvent(EventListener_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::_eth_requestAccounts\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n                });\n\n                if (!(this._addresses.length > 0)) {\n                  _context11.next = 3;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", Promise.resolve({\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                }));\n\n              case 3:\n                _context11.prev = 3;\n                _context11.next = 6;\n                return this.initializeRelay();\n\n              case 6:\n                relay = _context11.sent;\n                _context11.next = 9;\n                return relay.requestEthereumAccounts().promise;\n\n              case 9:\n                res = _context11.sent;\n                _context11.next = 17;\n                break;\n\n              case 12:\n                _context11.prev = 12;\n                _context11.t0 = _context11[\"catch\"](3);\n\n                if (!(typeof _context11.t0.message === \"string\" && _context11.t0.message.match(/(denied|rejected)/i))) {\n                  _context11.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n\n              case 16:\n                throw _context11.t0;\n\n              case 17:\n                if (res.result) {\n                  _context11.next = 19;\n                  break;\n                }\n\n                throw new Error(\"accounts received is empty\");\n\n              case 19:\n                this._setAddresses(res.result);\n\n                return _context11.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                });\n\n              case 21:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[3, 12]]);\n      }));\n\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context12.prev = 2;\n                _context12.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context12.sent;\n                _context12.next = 8;\n                return relay.signEthereumTransaction(tx).promise;\n\n              case 8:\n                res = _context12.sent;\n                return _context12.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context12.prev = 12;\n                _context12.t0 = _context12[\"catch\"](2);\n\n                if (!(typeof _context12.t0.message === \"string\" && _context12.t0.message.match(/(denied|rejected)/i))) {\n                  _context12.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context12.t0;\n\n              case 17:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[2, 12]]);\n      }));\n\n      function _eth_signTransaction(_x25) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n                _context13.next = 3;\n                return this.initializeRelay();\n\n              case 3:\n                relay = _context13.sent;\n                _context13.next = 6;\n                return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n\n              case 6:\n                res = _context13.sent;\n                return _context13.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _eth_sendRawTransaction(_x26) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context14.prev = 2;\n                _context14.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context14.sent;\n                _context14.next = 8;\n                return relay.signAndSubmitEthereumTransaction(tx).promise;\n\n              case 8:\n                res = _context14.sent;\n                return _context14.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context14.prev = 12;\n                _context14.t0 = _context14[\"catch\"](2);\n\n                if (!(typeof _context14.t0.message === \"string\" && _context14.t0.message.match(/(denied|rejected)/i))) {\n                  _context14.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context14.t0;\n\n              case 17:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[2, 12]]);\n      }));\n\n      function _eth_sendTransaction(_x27) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this._requireAuthorization();\n\n                typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n                address = (0, util_1.ensureAddressString)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context15.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _eth_signTypedData_v1(_x28) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context16.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _eth_signTypedData_v3(_x29) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context17.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function _eth_signTypedData_v4(_x30) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v4;\n    }()\n  }, {\n    key: \"_cbwallet_arbitrary\",\n    value: function () {\n      var _cbwallet_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(params) {\n        var action, data, result;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                action = params[0];\n                data = params[1];\n\n                if (!(typeof data !== \"string\")) {\n                  _context18.next = 4;\n                  break;\n                }\n\n                throw new Error(\"parameter must be a string\");\n\n              case 4:\n                if (!(typeof action !== \"object\" || action === null)) {\n                  _context18.next = 6;\n                  break;\n                }\n\n                throw new Error(\"parameter must be an object\");\n\n              case 6:\n                _context18.next = 8;\n                return this.genericRequest(action, data);\n\n              case 8:\n                result = _context18.sent;\n                return _context18.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: result\n                });\n\n              case 10:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function _cbwallet_arbitrary(_x31) {\n        return _cbwallet_arbitrary2.apply(this, arguments);\n      }\n\n      return _cbwallet_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(params) {\n        var _a, _b, _c, _d, request, chainIdNumber, success;\n\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                request = params[0];\n\n                if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                  _context19.next = 3;\n                  break;\n                }\n\n                return _context19.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"please pass in at least 1 rpcUrl\"\n                  }\n                });\n\n              case 3:\n                if (!(!request.chainName || request.chainName.trim() === \"\")) {\n                  _context19.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: 0,\n                  message: \"chainName is a required field\"\n                });\n\n              case 5:\n                if (request.nativeCurrency) {\n                  _context19.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: 0,\n                  message: \"nativeCurrency is a required field\"\n                });\n\n              case 7:\n                chainIdNumber = parseInt(request.chainId, 16);\n                _context19.next = 10;\n                return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n\n              case 10:\n                success = _context19.sent;\n\n                if (!success) {\n                  _context19.next = 15;\n                  break;\n                }\n\n                return _context19.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: null\n                });\n\n              case 15:\n                return _context19.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"unable to add ethereum chain\"\n                  }\n                });\n\n              case 16:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function _wallet_addEthereumChain(_x32) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(params) {\n        var request;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                request = params[0];\n                _context20.next = 3;\n                return this.switchEthereumChain(parseInt(request.chainId, 16));\n\n              case 3:\n                return _context20.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: null\n                });\n\n              case 4:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function _wallet_switchEthereumChain(_x33) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_watchAsset\",\n    value: function () {\n      var _wallet_watchAsset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(params) {\n        var _a, request, _request$options, address, symbol, image, decimals, res;\n\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                request = Array.isArray(params) ? params[0] : params;\n\n                if (!(((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                  _context21.next = 3;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"type is a required field\"\n                });\n\n              case 3:\n                if (!(request.type !== \"ERC20\")) {\n                  _context21.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Asset of type '\".concat(request.type, \"' not supported\")\n                });\n\n              case 5:\n                if (request === null || request === void 0 ? void 0 : request.options) {\n                  _context21.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"options is a required field\"\n                });\n\n              case 7:\n                if (request.options.address) {\n                  _context21.next = 9;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"option address is a required option\"\n                });\n\n              case 9:\n                _request$options = request.options, address = _request$options.address, symbol = _request$options.symbol, image = _request$options.image, decimals = _request$options.decimals;\n                _context21.next = 12;\n                return this.watchAsset(request.type, address, symbol, decimals, image);\n\n              case 12:\n                res = _context21.sent;\n                return _context21.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res\n                });\n\n              case 14:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function _wallet_watchAsset(_x34) {\n        return _wallet_watchAsset2.apply(this, arguments);\n      }\n\n      return _wallet_watchAsset;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(params) {\n        var param, filterId;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                param = params[0];\n                _context22.next = 3;\n                return this._filterPolyfill.newFilter(param);\n\n              case 3:\n                filterId = _context22.sent;\n                return _context22.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 5:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function _eth_newFilter(_x35) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return this._filterPolyfill.newBlockFilter();\n\n              case 2:\n                filterId = _context23.sent;\n                return _context23.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return this._filterPolyfill.newPendingTransactionFilter();\n\n              case 2:\n                filterId = _context24.sent;\n                return _context24.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts) {\n          return _this5._setAddresses(accounts);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n        });\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n\n  return CoinbaseWalletProvider;\n}(safe_event_emitter_1.default);\n\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","CoinbaseWalletProvider","safe_event_emitter_1","require","bn_js_1","eth_rpc_errors_1","EventListener_1","Session_1","WalletSDKRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","HAS_CHAIN_BEEN_SWITCHED_KEY","HAS_CHAIN_OVERRIDDEN_FROM_RELAY","options","_a","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","bind","_sendAsync","sendAsync","setProviderInfo","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","_eventListener","eventListener","isCoinbaseWallet","overrideIsCoinbaseWallet","chainId","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","type","method","data","params","length","initializeRelay","window","addEventListener","event","action","_chainId","Number","undefined","setItem","isChainOverridden","fromRelay","hasChainSwitched","originalChainId","chainChanged","ensureIntNumber","symbol","decimals","image","relay","watchAsset","promise","result","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","isWhitelistedNetworkOrStandalone","inlineAddEthereumChain","_isAuthorized","requestEthereumAccounts","addEthereumChain","res","isApproved","_b","switchEthereumChain","errorCode","ethErrors","provider","custom","code","switchResponse","rpcUrl","appName","appLogoUrl","then","onEvent","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","r","_sendRequest","req","Error","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","args","rpc","invalidRequest","message","newParams","makeRequestId","match","ensureRegExpString","_handleSynchronousMethods","newAddresses","JSON","stringify","join","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","eth_sign","eth_ecRecover","personal_sign","personal_ecRecover","eth_signTransaction","eth_sendRawTransaction","eth_sendTransaction","eth_signTypedData_v1","eth_signTypedData_v2","eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","cbWallet_arbitrary","wallet_addEthereumChain","wallet_switchEthereumChain","wallet_watchAsset","_eth_requestAccounts","_eth_sign","_eth_ecRecover","_personal_sign","_personal_ecRecover","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_eth_signTypedData_v1","_throwUnsupportedMethodError","_eth_signTypedData_v3","_eth_signTypedData_v4","_cbwallet_arbitrary","_wallet_addEthereumChain","_wallet_switchEthereumChain","_wallet_watchAsset","makeEthereumJSONRPCRequest","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","addressString","lowercaseAddresses","includes","_isKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","tx","fromAddress","from","selectedAddress","_ensureKnownAddress","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","unauthorized","unsupportedMethod","addPrefix","typedDataJson","signEthereumMessage","userRejectedRequest","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","parseInt","_requireAuthorization","_signEthereumMessage","_ethereumAddressFromSignedMessage","_prepareTransactionParams","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","error","trim","chainIdNumber","_c","_d","success","invalidParams","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setAccountsCallback","accounts","setChainCallback"],"sources":["/opt/miami-hackathon-starknet-p2e-main/node_modules/@coinbase/wallet-sdk/dist/provider/CoinbaseWalletProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst EventListener_1 = require(\"../connection/EventListener\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nclass CoinbaseWalletProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send.bind(this);\n        this._sendAsync = this.sendAsync.bind(this);\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this._eventListener = options.eventListener;\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            if (event.data.type !== \"walletLinkMessage\")\n                return; // compatibility with CBW extension\n            if (event.data.data.action === \"defaultChainChanged\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    get isChainOverridden() {\n        return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    }\n    set isChainOverridden(value) {\n        this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (this.isChainOverridden)\n            return;\n        this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n        const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n        if (hasChainSwitched && fromRelay)\n            return;\n        if (fromRelay) {\n            this.isChainOverridden = true;\n        }\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n        if (!this._isAuthorized() &&\n            !isWhitelistedNetworkOrStandalone) {\n            await relay.requestEthereumAccounts().promise;\n        }\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(rpcUrls[0], chainId, false);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n        if (res.errorCode) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode\n            });\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        var _a;\n        (_a = this._eventListener) === null || _a === void 0 ? void 0 : _a.onEvent(EventListener_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    close() {\n        void this.initializeRelay().then(relay => relay.resetAndReload());\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // Coinbase Wallet Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`Coinbase Wallet does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary:\n                return this._cbwallet_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const address = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(address);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        var _a;\n        if (!this._isKnownAddress(addressString)) {\n            (_a = this._eventListener) === null || _a === void 0 ? void 0 : _a.onEvent(EventListener_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId\n        };\n    }\n    _isAuthorized() {\n        return this._addresses.length > 0;\n    }\n    _requireAuthorization() {\n        if (!this._isAuthorized()) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        var _a;\n        (_a = this._eventListener) === null || _a === void 0 ? void 0 : _a.onEvent(EventListener_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _cbwallet_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` }\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\"\n            });\n        }\n        if (!request.nativeCurrency) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\"\n            });\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` }\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        var _a;\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"type is a required field\"\n            });\n        }\n        if (request.type !== \"ERC20\") {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: `Asset of type '${request.type}' not supported`\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"options is a required field\"\n            });\n        }\n        if (!request.options.address) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"option address is a required option\"\n            });\n        }\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback(accounts => this._setAddresses(accounts));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n            });\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}